// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int     @id @default(autoincrement())
  name               String  @db.VarChar(100)
  email              String  @unique @db.VarChar(100)
  phone              String? @unique @db.VarChar(15)
  hashedPassword     String
  hashedRefreshToken String?
  is_active          Boolean @default(false)
  activation_link    String? @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Admin {
  id            Int     @id @default(autoincrement())
  full_name     String  @db.VarChar(100)
  phone         String  @unique @db.VarChar(100)
  email         String  @unique @db.VarChar(100)
  hashedPassword     String
  hashedRefreshToken String?
  is_creator    String  @db.VarChar(100)
  refresh_token String?

  @@map("admin")
}

model Car {
  id              Int          @id @default(autoincrement())
  plate_number    String
  vin_number      String
  model           String
  year            String
  current_owner_id Int
  CarHistory      CarHistory[]

  @@map("car")
}

model CarHistory {
  id        Int    @id @default(autoincrement())
  car_id    Int
  owner_id  Int
  buyed_at  DateTime
  sold_at   DateTime?

  car       Car    @relation(fields: [car_id], references: [id])

  @@map("car_history")
}

model Regions {
  id    Int    @id @default(autoincrement())
  name  String
  District District[]
  @@map("regions")
}

model District {
  id        Int      @id @default(autoincrement())
  name      String
  regionId  Int
  region    Regions  @relation(fields: [regionId], references: [id])
  @@map("district")
}